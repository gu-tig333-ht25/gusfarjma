
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});
  @override
  Widget build(BuildContext context) => const MaterialApp(
        debugShowCheckedModeBanner: false, home: TodoPage());
}

class TodoPage extends StatelessWidget {
  const TodoPage({super.key});

  @override
  Widget build(BuildContext context) {
    final todos = [
      {'title': 'Write a book', 'done': false},
      {'title': 'Do homework', 'done': false},
      {'title': 'Tidy room', 'done': true},
      {'title': 'Watch TV', 'done': false},
      {'title': 'Nap', 'done': false},
      {'title': 'Shop groceries', 'done': false},
      {'title': 'Have fun', 'done': false},
      {'title': 'Meditate', 'done': false},
    ];

    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        centerTitle: true, backgroundColor: const Color(0xFFBDBDBD), elevation: 0,
        title: const Text('TIG333 TODO',
          style: TextStyle(color: Colors.black, fontWeight: FontWeight.w600)),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(children: [
          card(const Padding(
            padding: EdgeInsets.fromLTRB(16, 14, 16, 10),
            child: Column(children: [
              DisabledTextField('What are you going to do?'),
              SizedBox(height: 10), Text('+ ADD'),
            ]),
          )),
          const SizedBox(height: 12),
          const Row(mainAxisAlignment: MainAxisAlignment.center, children: [
            FilterTab('All', true), SizedBox(width: 8),
            FilterTab('Done', false), SizedBox(width: 8),
            FilterTab('Undone', false),
          ]),
          const SizedBox(height: 12),
          Expanded(child: card(Stack(children: [
            ListView.separated(
              padding: const EdgeInsets.only(bottom: 64),
              itemCount: todos.length,
              separatorBuilder: (_, __) =>
                  Container(height: 1, color: const Color(0xFFE7E7E7)),
              itemBuilder: (_, i) =>
                  todoRow(todos[i]['title'] as String, todos[i]['done'] as bool),
            ),
            const Positioned(right: 12, bottom: 12, child: SmallPlusButton()),
          ]))),
        ]),
      ),
    );
  }
}

Widget card(Widget child) => Container(
  decoration: BoxDecoration(
    color: Colors.white, borderRadius: BorderRadius.circular(6),
    border: Border.all(color: const Color(0xFFD9D9D9))),
  child: child,
);

Widget todoRow(String title, bool done) => SizedBox(
  height: 46,
  child: Row(children: [
    const SizedBox(width: 8), checkBox(done), const SizedBox(width: 12),
    Expanded(child: Text(title, style: TextStyle(
      decoration: done ? TextDecoration.lineThrough : null,
      color: done ? Colors.black54 : Colors.black87))),
    const Padding(
      padding: EdgeInsets.only(right: 12),
      child: Text('x', style: TextStyle(fontSize: 18)),
    ),
  ]),
);

Widget checkBox(bool checked) => Container(
  width: 18, height: 18,
  decoration: BoxDecoration(
    border: Border.all(color: const Color(0xFF6B6B6B), width: 1.4),
    borderRadius: BorderRadius.circular(2),
    color: checked ? const Color(0x102F80ED) : Colors.white),
  alignment: Alignment.center,
  child: checked ? const Icon(Icons.check, size: 14, color: Colors.black87) : null,
);

class FilterTab extends StatelessWidget {
  final String label; final bool selected;
  const FilterTab(this.label, this.selected, {super.key});
  @override
  Widget build(BuildContext context) => Container(
    padding: const EdgeInsets.symmetric(horizontal: 18, vertical: 8),
    decoration: BoxDecoration(
      color: Colors.white, borderRadius: BorderRadius.circular(4),
      border: Border.all(color: const Color(0xFFD9D9D9), width: selected ? 2 : 1)),
    child: Text(label, style: TextStyle(
      fontWeight: selected ? FontWeight.bold : FontWeight.w500,
      color: Colors.black87)),
  );
}

class SmallPlusButton extends StatelessWidget {
  const SmallPlusButton({super.key});
  @override
  Widget build(BuildContext context) => DecoratedBox(
    decoration: BoxDecoration(
      shape: BoxShape.circle, color: Colors.white,
      border: Border.all(color: const Color(0xFFD9D9D9)),
      boxShadow: const [BoxShadow(
        blurRadius: 6, offset: Offset(0, 2), color: Color(0x22000000))]),
    child: const SizedBox(
      width: 36, height: 36,
      child: Icon(Icons.add, size: 22, color: Colors.black87)),
  );
}

class DisabledTextField extends StatelessWidget {
  final String hint;
  const DisabledTextField(this.hint, {super.key});
  @override
  Widget build(BuildContext context) => IgnorePointer(
    child: TextField(
      decoration: InputDecoration(
        isDense: true, hintText: hint,
        contentPadding: const EdgeInsets.symmetric(horizontal: 10, vertical: 10),
        border: const OutlineInputBorder(
          borderSide: BorderSide(color: Color(0xFFD9D9D9))),
      ),
    ),
  );
}
